syntax = "proto3";
package messages;

//for libp2p requests on the a8 network
message A8message {
    string message_id = 1;
    string call_id = 2; //this used to be threadId
    oneof call {
        A8Request a8_request = 3;
        A8Response a8_response = 4;
    }
}

//packaging a request made of an EN
message A8Request {
    //transaction and signature can be blank for non-secure requests
    Transaction transaction = 1;

    bytes signature = 2;

    oneof request {
        InvokeRequest invoke = 4;
        FnData deploy = 5;
        ShowRequest show = 6;
    }
}

//packaging EN response
//decide if we want FNData has a value here instead of DeployResponse
//todo decide this with the flow.
message A8Response {
    oneof response {
        InvokeResponse invoke = 1;
        FnData deploy = 2;
        ShowResponse show = 3;
        Error error = 4;
  }
}

//information that makes a transaction unique
message Transaction {
    string nonce = 1;
    string public_key = 2;
    string NodeId = 3;
}

message InvokeRequest {
    string fqn = 1;
    string Input = 2;
}

message InvokeResponse {
    bytes data = 1;
    string type = 2;  // MIME type
}

message FnData {
    string fqn = 1;
    string image = 2;
    int32 memory = 3;
    int32 timeout = 4;
    int32 idle_timeout = 5;
    Audit audit = 6;
}

message ShowRequest {
    string ns = 1;
}

message ShowResponse {
    oneof response{
        FnData fn_function_data = 1;
        NamespaceList namespace_list = 2;
    }
}

//oneof cannot have repeated as a modifier of an entry, so we are wrapping the one of in a list message
message NamespaceList {
    repeated NamespaceData list = 1;
}

message NamespaceData {
    string namespace_name = 1;
    Audit audit = 2;
}

message Audit {
    int64 created_at = 1;
    int64 updated_at = 2;
}

message Error {
    string message = 1;
}
